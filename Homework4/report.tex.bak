\documentclass[a4paper, 11pt]{article}
% ----- Loading the Package MCMthesis -----
% -----           v 5.01-L            -----
% `tcn' is short for `Team Control Number'.
% You should fill your tcn after the equal sign following tcn.
% The option `sheet' contorls weather the summary sheet
% will appear.
% The option `abstract' controls weather the abstract
% will appear in the title-page.
\usepackage{float}
\usepackage{amsmath}
\usepackage{diagbox}
\usepackage{color}
\usepackage{latexsym}
% ----- Question Mark -----
% ----- Fonts settings -----
% You may need to install the font files, if it's needed.
% Disable it, if you don't want this font.
\usepackage{palatino}
\usepackage{geometry}% 能设置页边距
\usepackage{setspace}% 能设置行距
\usepackage{graphicx} %插入图形宏包
\usepackage{float} %与插入图形有关 禁止图表的浮动[H]
% ----- Set the skip betweent the paragraphics -----
\setlength\parskip{.5\baselineskip}
\setcounter{tocdepth}{4}
% ----- The name of Abstract ------
\providecommand{\abstractname}{\relax} % <-- Do not modify here.
\renewcommand{\abstractname}{\Large Abstract} % <-- Modify here, if needed.
% -----------------------------------
% ===== The Title of Your Paper =====
% -----------------------------------
\newtheorem{law}{Law} %law 表明定理的名字，在输出中不显示，Law 表明定理的真实名字，在输出中显示 名称的替代？
\newtheorem{jury}[law]{Jury} %表明以jury 为名称的定理与law 定理按同样顺序编号
\newtheorem{mur}{Murphy}[section] %[section] 使加入的定理的编号与当前节链接
\title{Solutions for HW4}
% ---------------------------------------
% ===== The Author(s) of Your Paper =====
% ---------------------------------------
\author{Yunhai Han}
% ----------------
% ===== Time =====
% ----------------
%首先 \begin{item} 是输出标号段落内容   \cite{} 能标号
\usepackage{listings}
\usepackage{color}

\definecolor{dkgreen}{rgb}{0,0.6,0}
\definecolor{gray}{rgb}{0.5,0.5,0.5}
\definecolor{mauve}{rgb}{0.58,0,0.82}

\lstset{frame=tb,
  language=Python,
  aboveskip=3mm,
  belowskip=3mm,
  showstringspaces=false,
  columns=flexible,
  basicstyle={\small\ttfamily},
  numbers=none,
  numberstyle=\tiny\color{gray},
  keywordstyle=\color{blue},
  commentstyle=\color{dkgreen},
  stringstyle=\color{mauve},
  breaklines=true,
  breakatwhitespace=true,
  tabsize=3
}
\begin{document}
% Abstract should be put before `\maketitle'
\maketitle
\pagestyle{empty}
% Generate the Table of Contents, if it's needed.
% \tableofcontents
% \newpage
% The body of your paper

%====================== 问题介绍====================================
\section{E3.1 Shortest paths and distances on the circle}
From the hint, if the two points are on an unit circle, we don't have to take its radius into consideration, because the length of arc is the product of the radius and the radian.
\subsection{i}
It's easy to compute the both distance, so I put the answers below:
\begin{displaymath}
dist_{cc}(\theta_1,\theta_2)= \frac{11\pi}{12} \ \text{and}  \ dist_{c}(\theta_1,\theta_2)= \frac{13\pi}{12}
\end{displaymath}
\subsection{ii}
First we could use the operator \textit{modulo} to shift any arbitrary $\theta$ into the region $[0,2\pi)$ by taking the remainder. Since any $\theta$ on the circle is represented in the interval $[-\pi,\pi)$, we need to subtract $\pi$ from the remainder.

We preprocess any input data $\theta_1$ and $\theta_2$ with the above method, and then compute the counter-clockwise distance from the new $\theta_1$ and $\theta_2$. There are the two possible cases:
\begin{itemize}
\item $\theta_1$ is larger than $\theta_2$
\item $\theta_1$ is less than $\theta_2$
\end{itemize}
For the first case, we could compute the counter-clockwise distance by the following formula:
\begin{displaymath}
dist_{cc}(\theta_1,\theta_2)= \theta_2-\theta_1+2\pi
\end{displaymath}
For the second case, we could compute the counter-clockwise distance by the following formula:
\begin{displaymath}
dist_{cc}(\theta_1,\theta_2)= \theta_2-\theta_1
\end{displaymath}
\subsection{iii}
Similarly, the first step is to shift any arbitrary $\theta$ into the region $[-\pi,\pi)$ and this can be done with the same method. Then we could take advantage of the following property to help us compute the clockwise distance:
\begin{displaymath}
dist_{cc}(\theta_1,\theta_2)= dist_{c}(\theta_2,\theta_1)
\end{displaymath}
Hence, it is equivalent for us to compute the counter-clockwise distance from $\theta_2$ to $\theta_1$. Since we have already provided the formula for this, this would be easy to swap the two variables and obtain the results.
\subsection{iv}
Since we know how to compute the counter-clockwise and clockwise distance between any two $\theta$, we compare the two results and then select the smallest one as the distance between the two angles. Also, we could implement this algorithm in another way:
\begin{displaymath}
dist_{circle}(\theta_1,\theta_2)=\textbf{min}(dict_{cc}(\theta_1,\theta_2),dict_c(\theta_1,\theta_2))
\end{displaymath}
\begin{displaymath}
dist_{circle}(\theta_1,\theta_2)=\textbf{min}(dict_{cc}(\theta_1,\theta_2),dict_{cc}(\theta_2,\theta_1))
\end{displaymath}
\begin{displaymath}
\textbf{if} \ \theta_1 > \theta2 : dist_{cc}(\theta_1,\theta_2)= -(\theta_1-\theta_2)+2\pi \quad \textbf{and} \quad dict_{cc}(\theta_2,\theta_1) = \theta_1-\theta_2
\end{displaymath}
\begin{displaymath}
\textbf{if} \ \theta_1 \leq \theta2 : \text{just swap the positions of} \ \theta_1 \ \text{and} \ \theta_2
\end{displaymath}
From the above equations, we could quickly compute the distance between any two angles.
\section{The configuration space of the new robot}
There are two different kinds of flat disk robots model: the first one is the translating planar robot and the other is roto-translation planar robots. For the first one, the configuration space is $Q=R^2$ and for the second one, the configuration space is $Q=R^2 \times S^1$. For the 2-link robot, the manipulators with its configuration space are referred to as \"Selective Compliance Assembly Robot Arm\" or SCARA in brief. In the figure 315, the robot arm has two revolute joints and a vertical prismatic joint, so the configuration space could contain three variables. Two of such variables describe the revolution and the other one describes the prismatic motion.

Hence, in total, this new robot's configuration space could contain five or six variables, which depends on the model for the flat disk robot. The position of the end effector is represented by $R^3$ in the workspace and once we determine the configuration space and build the forward and inverse kinematic maps, we could translate the position into the configuration space for the motion planning task.
\section{Torus}
\subsection{a}
From the lecture, we know that the vertical on the left is identified with the vertical segment on the right and the horizontal segment on the top is identified with horizontal segment on the bottom. So, it is easy to tell which nodes represent the same point on the torus. I draw a picture for the illustration.
\begin{figure}[H] %[H]表明图片输出在指定想要的位置（即代码处的位置），不然图片输出此页最上方，
\centering
\includegraphics[angle=0,height=6cm,width=8cm]{1.png}
\caption{Nodes and edges} \label{fig:1} %caption 即标题的意思
\end{figure}
Each line connects the two nodes which represent the same point on the torus. For example, the node $n_{11}=(0,-\pi)$ and the node $n_{15}=(0,\pi)$ represent the same point. Besides, you can see that the four nodes on the four corners indeed represent the same point.
\subsection{b}
If we are allowed to deviate from the nodes in the graph, the shortest path between the two nodes are the direct segment connecting the two nodes. If we are not allowed to do that, which means it needs to connect different nodes, the shortest path between the points $n_7$ and $n_{19}$ is shown as below:
\begin{figure}[H]
\centering
\begin{minipage}[c]{0.50\textwidth}
\centering
\includegraphics[height=5cm,width=4cm]{2.png}
\end{minipage}%
\begin{minipage}[c]{0.50\textwidth}
\centering
\includegraphics[height=5cm,width=4cm]{3.png}
\end{minipage}
\caption{The shortest path} \label{fig:3}
\end{figure}
There are in total five different shortest paths. The shortest distance is three steps.
\subsection{c}
If the edges are defined as the problem says, only the neighboring nodes are connected. Besides, since the square is defined as a torus, the vertical segment on the left is identical to the one on the right and it's the same for the horizontal segment. To combine these two constraints, we could list the set of all the edges:
\begin{figure}[H] %[H]表明图片输出在指定想要的位置（即代码处的位置），不然图片输出此页最上方，
\centering
\includegraphics[angle=0,height=6cm,width=8cm]{4.png}
\caption{Graph edges and nodes} \label{fig:4} %caption 即标题的意思
\end{figure}
From the above figure, only the neighboring nodes could be connected via an edge. There are 40 edges totally. However, we know that the node $n_1$, $n_5$, $n_{21}$ and $n_{25}$ represent the same point, so we could modify this graph in order to take this constraint into consideration.
\begin{figure}[H] %[H]表明图片输出在指定想要的位置（即代码处的位置），不然图片输出此页最上方，
\centering
\includegraphics[angle=0,height=6cm,width=8cm]{11.png}
\caption{Graph edges and nodes} \label{fig:11} %caption 即标题的意思
\end{figure}
I remove the nodes $n_5, n_{10}, n_{15}, n_{20}, n_{25}, n_{21}, n_{22}, n_{23}, n_{24}$ because they represent the same nodes as $n_1, n_2, n_3$ and $n_4$, respectively. You can see after this operation, some edges are identical, for example, there are two $(n_1,n_6)$ in the set. I remove these edges which appear for more than one time and draw the modified graph edges and nodes.
\begin{figure}[H] %[H]表明图片输出在指定想要的位置（即代码处的位置），不然图片输出此页最上方，
\centering
\includegraphics[angle=0,height=6cm,width=8cm]{12.png}
\caption{Graph edges and nodes} \label{fig:12} %caption 即标题的意思
\end{figure}
From the above figure, there are in total 32 edges and 16 nodes.
\subsection{d}
The neighbors of node $n_1$ are nodes $n_2, n_6, n_{4}$ and node $n_{16}$. The node $n_22$ is identical to the node $n_2$ and the neighbors of node $n_2$ are nodes $n_{17}, n_1, n_3$ and node $n_7$.
\subsection{e}
Each figure below corresponds to each layer and I mark the edges by red segments.
\begin{figure}[H] %[H]表明图片输出在指定想要的位置（即代码处的位置），不然图片输出此页最上方，
\centering
\includegraphics[angle=0,height=6cm,width=8cm]{5.png}
\caption{Layer 0} \label{fig:5} %caption 即标题的意思
\end{figure}
For the first layer, we start from the node $n_7$, and there are four edges connecting $n_7$ to other nodes. These four nodes would be set as the start node for the next exploration.
\begin{figure}[H] %[H]表明图片输出在指定想要的位置（即代码处的位置），不然图片输出此页最上方，
\centering
\includegraphics[angle=0,height=6cm,width=8cm]{6.png}
\caption{Layer 1} \label{fig:6} %caption 即标题的意思
\end{figure}
For the second layer, we start from the four nodes detected in the previous step. In the figure, you could see that the node $n_3$ is connected to both $n_2$ and $n_8$, but in fact, when we run BFS algorithm, the first time $n_3$ visited, its parent node would be set. Then, for the next time, it would not be detected since its parent node is not NONE any more. It's the same for the node $n_1$, $n_9$, $n_{13}$, $n_{17}$ and $n_{11}$. Because it is unnecessary for me to decide the operation order, I just connect all of them.
\begin{figure}[H] %[H]表明图片输出在指定想要的位置（即代码处的位置），不然图片输出此页最上方，
\centering
\includegraphics[angle=0,height=6cm,width=8cm]{7.png}
\caption{Layer 2} \label{fig:7} %caption 即标题的意思
\end{figure}
For the same reason, the node $n_{4}$, $n_{14}$, $n_{18}$ and $n_{16}$ would be only visited once.
\begin{figure}[H] %[H]表明图片输出在指定想要的位置（即代码处的位置），不然图片输出此页最上方，
\centering
\includegraphics[angle=0,height=6cm,width=8cm]{8.png}
\caption{Layer 2} \label{fig:8} %caption 即标题的意思
\end{figure}
For the same reason, the node $n_{19}$ would be only visited once. After this iteration, $Q$ is empty and the algorithm terminates.

Finally, we successfully search through all the graph and since all the nodes in the graph are reachable, this graph is connected.
\end{document}
% ----- End of Document Body -----
